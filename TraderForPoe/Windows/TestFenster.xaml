<Window x:Class="TraderForPoe.Windows.TestFenster"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TraderForPoe.Windows"
        xmlns:classes="clr-namespace:TraderForPoe.Classes"
        xmlns:ctrl="clr-namespace:TraderForPoe.Controls"
        mc:Ignorable="d"
        Title="TestFenster" Height="184.626" Width="370.565">

    <Window.Resources>
        <PopupAnimation x:Key="{x:Static SystemParameters.ToolTipPopupAnimationKey}">None</PopupAnimation>
        <Style TargetType="ToolTip">
            <Setter Property="ToolTipService.InitialShowDelay" Value="1" />
            <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
            <Setter Property="ToolTipService.ShowDuration" Value="0" />
        </Style>
        <Style TargetType="Window">
            <Setter Property="FontFamily" Value="Segoe UI" />
        </Style>
        <Style TargetType="Button">


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0" MinHeight="22">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="#FF5C656D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>


                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF474E55" />
                </Trigger>

                <Trigger Property="Button.IsPressed" Value="True">
                    <Setter Property="Control.Background" Value="#FF3B4046" />
                </Trigger>
            </Style.Triggers>

        </Style>
        <Style TargetType="Button" x:Key="inlineStyle">


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0" Padding="3,0,3,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="#FF23272B"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF474E55" />
                </Trigger>

                <Trigger Property="Button.IsPressed" Value="True">
                    <Setter Property="Control.Background" Value="#FF3B4046" />
                </Trigger>
            </Style.Triggers>

        </Style>
        <Style TargetType="TextBlock">
            <!--<Setter Property="FontFamily" Value="Consolas"/>-->
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type ctrl:CustomTabItem}">

            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{TemplateBinding Content}" ToolTip="{TemplateBinding Content}" ></TextBlock>
                    </DataTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border Cursor="Hand" x:Name="tab" Background="#FF23272B" BorderThickness="0" BorderBrush="Transparent" Padding="5,2,5,2">
                            <Grid>
                                <ContentPresenter   x:Name="contentPresenter" 
                                                    ContentSource="Header"
                                                    TextBlock.Foreground="White" 
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="tab" Property="Background" Value="#FF5C656D"/>
                                <Setter TargetName="tab" Property="BorderBrush" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="tab" Property="Background" Value="#FF23272B"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="tab" Property="Background" Value="#FF474E55"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="TabControlControlTemplate1" TargetType="{x:Type TabControl}">
            <Grid x:Name="Grid" KeyboardNavigation.TabNavigation="Local">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="ColumnDefinition0" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                    <RowDefinition x:Name="RowDefinition1" Height="*" />
                </Grid.RowDefinitions>
                <Border Grid.Row="1" Grid.Column="0" Background="{TemplateBinding Background}" x:Name="Border1">
                    <ContentPresenter DataContext="{x:Null}" Margin="{TemplateBinding Padding}" x:Name="PART_SelectedContentHost" Content="{TemplateBinding SelectedContent}" ContentTemplate="{TemplateBinding SelectedContentTemplate}" ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}" ContentSource="SelectedContent" />
                </Border>
                <!--<Border Grid.Row="1" Grid.Column="0" x:Name="ContentPanel" BorderBrush="#FFD0CEBF" BorderThickness="0" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained">
                     <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                     </Border>
                     </Border>-->
                <classes:SqueezeTabPanel IsItemsHost="true" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" Background="Gray"/>
            </Grid>
        </ControlTemplate>

    </Window.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>

        <!--<DockPanel>-->

        <TabControl Grid.Row="0" Name="tctrlItems" MouseDown="TabControl_MouseDown" Background="#FF23272B" Template="{DynamicResource TabControlControlTemplate1}" IsSynchronizedWithCurrentItem="True">
            
        </TabControl>

        <StackPanel Grid.Row="1" Name="stpCmds" DockPanel.Dock="Bottom" Visibility="Visible" >
            <UniformGrid Rows="1" DockPanel.Dock="Bottom" Background="#FF23272B" Margin="0" >
                <Button Cursor="Hand"  Margin="5,5,0,5" Padding="3" >
                    <TextBlock>Invite</TextBlock>
                </Button>
                <Button Cursor="Hand" Margin="5,5,0,5" Padding="3" >
                    <TextBlock>Hideout</TextBlock>
                </Button>
                <Button Cursor="Hand" Margin="5,5,0,5" Padding="3" >
                    <TextBlock>Home</TextBlock>
                </Button>
                <Button Cursor="Hand" Margin="5,5,0,5" Padding="3" >
                    <TextBlock>Trade</TextBlock>
                </Button>
                <Button Cursor="Hand" Margin="5,5,0,5" Padding="3" >
                    <TextBlock>Busy</TextBlock>
                </Button>
                <Button Cursor="Hand" Margin="5,5,5,5" Padding="3" >
                    <TextBlock>Resend</TextBlock>
                </Button>

            </UniformGrid>
            <UniformGrid Rows="1" DockPanel.Dock="Bottom" Margin="0" Background="#FF23272B">
                <Button Cursor="Hand"  Margin="5,2,0,5" Padding="3" >
                    <TextBlock>Invite</TextBlock>
                </Button>

                <Button Cursor="Hand" Margin="5,2,0,5" Padding="3" >
                    <TextBlock>Hideout</TextBlock>
                </Button>
                <Button Cursor="Hand" Margin="5,2,0,5" Padding="3" >
                    <TextBlock>Home</TextBlock>
                </Button>
                <Button Cursor="Hand" Margin="5,2,0,5" Padding="3" >
                    <TextBlock>Trade</TextBlock>
                </Button>
                <Button Cursor="Hand" Margin="5,2,0,5" Padding="3" >
                    <TextBlock>Busy</TextBlock>
                </Button>
                <UniformGrid Rows="1" Margin="5,2,5,0">
                    <Button Margin="0,0,2.5,5" Click="Button_Click_1">X</Button>
                    <Button Margin="2.5,0,0,5" Click="Button_Click">^</Button>
                </UniformGrid>
            </UniformGrid>
        </StackPanel>


        <!--</DockPanel>-->
    </Grid>
</Window>
